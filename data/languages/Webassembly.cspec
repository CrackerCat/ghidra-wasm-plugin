<?xml version="1.0" encoding="UTF-8"?>

<!-- See Relax specification: Ghidra/Framework/SoftwareModeling/data/languages/compiler_spec.rxg -->

<compiler_spec>
   <data_organization>
    <char_type signed="false" />
    <char_size value="2" />
    <short_size value="2" />
    <pointer_size value="4"/>
    <integer_size value = "4"/>
    <float_size value="4" />
    <long_size value="8" />
    <double_size value="8" />
  </data_organization>
  <global>
    <range space="ram"/>
    <range space="mem0"/>
  </global>
  <stackpointer register="SP" space="ram"/>
  <default_proto>
    <prototype name="__asmA" extrapop="0" stackshift="0" strategy="register">
      <input>
        <pentry minsize="1" maxsize="8" extension="zero">
          <register name="l0"/>
        </pentry>
      </input>
      <output>
        <pentry minsize="1" maxsize="8" extension="zero">
          <register name="ret0"/>
        </pentry>
      </output>
    </prototype>
  </default_proto>
  <callotherfixup targetop="popCallOther">
  	<pcode dynamic="true">
  	  <input name="bitsize_push" />
  	</pcode>
  </callotherfixup>
  <callotherfixup targetop="pushCallOther">
  	<pcode dynamic="true">
  	  <input name="bitsize_push" />
  	</pcode>
  </callotherfixup>
  <callotherfixup targetop="brCallOther">
  	<pcode dynamic="true">
  	  <input name="lvl_br" />
  	</pcode>
  </callotherfixup>
</compiler_spec>
